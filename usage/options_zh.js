webpackJsonp([5,25],{714:function(t,e){t.exports={content:'<h3 id=offlinefallback><a href=#offlinefallback aria-hidden=true><span class="icon icon-link"></span></a>offlineFallback</h3><ul><li>Type: <code>boolean</code></li></ul><p>当离线状态下，是否使用本地模板缓存作为兼容方案</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>true</code></td><td><code>--offline-fallback=true|false</code></td></tr></tbody></table><h3 id=updatenotify><a href=#updatenotify aria-hidden=true><span class="icon icon-link"></span></a>updateNotify</h3><ul><li>Type: <code>boolean</code></li></ul><p>是否提示升级 <a href=https://github.com/yeoman/update-notifier>update-notifier</a></p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>true</code></td><td><code>--update-notify=true|false</code></td></tr></tbody></table><h3 id=cachedir><a href=#cachedir aria-hidden=true><span class="icon icon-link"></span></a>cacheDir</h3><ul><li>Type: <code>string|boolean</code></li></ul><p>缓存存放的目录路径</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td>an computed value</td><td><code>--cache-dir=&lt;string></code></td></tr></tbody></table><h3 id=includes><a href=#includes aria-hidden=true><span class="icon icon-link"></span></a>includes</h3><ul><li>Type: <code>string|string[]|Function|RegExp</code></li></ul><p>哪些文件需要被覆盖（默认包括所有文件）</p><p>当你需要覆盖某些文件的时候，可以用该字段，如 <code>--includes=README.md</code></p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>() => true</code></td><td><code>--includes=&lt;string>,&lt;string></code></td></tr></tbody></table><h3 id=excludes><a href=#excludes aria-hidden=true><span class="icon icon-link"></span></a>excludes</h3><ul><li>Type: <code>string|string[]|Function|RegExp</code></li></ul><p>相反与 <code>inlcudes</code></p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>() => false</code></td><td><code>--excludes=&lt;string>,&lt;string></code></td></tr></tbody></table><h3 id=extends><a href=#extends aria-hidden=true><span class="icon icon-link"></span></a>extends</h3><ul><li>Type: <code>string[]</code></li></ul><p>继承额外的 edam 配置文件</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>[]</code></td><td><code>--extends=&lt;string,string></code></td></tr></tbody></table><h3 id=plugins><a href=#plugins aria-hidden=true><span class="icon icon-link"></span></a>plugins</h3><ul><li>Type: <code>string[]|[[Function, object]]|Function[]</code></li></ul><p>插件注册列表</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>[]</code></td><td><code>--plugins=&lt;string,string></code></td></tr></tbody></table><h3 id=debug><a href=#debug aria-hidden=true><span class="icon icon-link"></span></a>debug</h3><ul><li>Type: <code>boolean</code></li></ul><p>开启 debug 模式，当 --silent 开启时不会生效</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>false</code></td><td><code>-d, --debug=true|false</code></td></tr></tbody></table><h3 id=pullnpmclient><a href=#pullnpmclient aria-hidden=true><span class="icon icon-link"></span></a>pull.npmClient</h3><ul><li>Type: <code>npm|yarn</code></li></ul><p>指定安装 npm 包的客户端</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>npm</code></td><td><code>--pull.npm-client=&lt;string></code></td></tr></tbody></table><h3 id=pullnpmclientargs><a href=#pullnpmclientargs aria-hidden=true><span class="icon icon-link"></span></a>pull.npmClientArgs</h3><ul><li>Type: <code>npm|yarn</code></li></ul><p>指定安装 npm 包时的参数，如 <code>--pull.npm-client-args="--registry=http://example.com"</code></p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td>string[]</td><td><code>--pull.npm-client-args=&lt;string></code></td></tr></tbody></table><h3 id=pullgit><a href=#pullgit aria-hidden=true><span class="icon icon-link"></span></a>pull.git</h3><ul><li>Type: <code>clone|download</code></li></ul><p>指定拉取 git 仓库的方式；</p><ul><li>clone: 使用 git clone</li><li>download: download tar 包</li></ul><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>clone</code></td><td><code>--pull.git=&lt;string></code></td></tr></tbody></table><h3 id=userc><a href=#userc aria-hidden=true><span class="icon icon-link"></span></a>userc</h3><ul><li>Type: <code>boolean</code></li></ul><p>是否使用 运行时配置文件，如 <code>.edamrc</code> / package.json 中 <code>edam</code> 配置</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>true</code></td><td><code>--userc=true|false</code></td></tr></tbody></table><h3 id=yes><a href=#yes aria-hidden=true><span class="icon icon-link"></span></a>yes</h3><ul><li>Type: <code>boolean</code></li></ul><p>使用默认值问答，而不是需要输入交互</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>false</code></td><td><code>-y, --yes</code></td></tr></tbody></table><h3 id=storeprompts><a href=#storeprompts aria-hidden=true><span class="icon icon-link"></span></a>storePrompts</h3><ul><li>Type: <code>boolean</code></li></ul><p>是否存储问答交互</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>true</code></td><td><code>--store-prompts=true|false</code></td></tr></tbody></table><h3 id=output><a href=#output aria-hidden=true><span class="icon icon-link"></span></a>output</h3><ul><li>Type: <code>string</code></li></ul><p>输出文件夹</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>process.cwd()</code></td><td><code>-o &lt;string>, --output=&lt;string></code></td></tr></tbody></table><h3 id=silent><a href=#silent aria-hidden=true><span class="icon icon-link"></span></a>silent</h3><ul><li>Type: <code>boolean</code></li></ul><p>静默模式</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>false</code></td><td><code>-s, --silent</code></td></tr></tbody></table><h3 id=overwrite><a href=#overwrite aria-hidden=true><span class="icon icon-link"></span></a>overwrite</h3><ul><li>Type: <code>boolean</code></li></ul><p>是否覆盖已经存在的文件</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>false</code></td><td><code>-w, --overwrite</code></td></tr></tbody></table><h3 id=clean><a href=#clean aria-hidden=true><span class="icon icon-link"></span></a>clean</h3><ul><li>Type: <code>boolean</code></li></ul><p>在写入之前，是否清空输出目录</p><table><thead><tr><th>default</th><th>cli</th></tr></thead><tbody><tr><td><code>false</code></td><td><code>--clean</code></td></tr></tbody></table>',extra:{"_image-loader_":[]}}}});
//# sourceMappingURL=options_zh.js.map