webpackJsonp([2,25],{244:function(e,a,n){e.exports=n.p+"54d6cb2f693ceb46c5ae49b090874d1b.svg"},706:function(e,a,n){e.exports={content:"<style>.post{max-width:700px;margin:auto}</style><h1 id=features><a href=#features aria-hidden=true><span class=\"icon icon-link\"></span></a>Features</h1><p><img src=./imgs/features.svg data-image-loader=0></p><h2 id=inferred-configuration><a href=#inferred-configuration aria-hidden=true><span class=\"icon icon-link\"></span></a>Inferred Configuration</h2><p>Edam tracks the first matched configuration starting with <code>process.cwd()</code>, and lookup the parent <code>../</code> paths and so on like <code>.babelrc</code>. (<a href=https://github.com/davidtheclark/cosmiconfig>cosmiconfig</a>)</p><p>JSON file <code>.edamrc</code> supports human-like syntax like comment.(<a href=https://github.com/json5/json5>JSON5</a>)</p><p>It's awesome that edam supports <code>extends</code> field like <a href=http://www.typescriptlang.org/docs/handbook/tsconfig-json.html><code>tsconfig.json</code></a>.</p><pre><code class=\"hljs language-text\"data-query={} data-lang=text>// root/.edamrc\n{\n  alias: {\n    react: 'facebook/react'\n  },\n  plugins: ['edam-plugin-dulcet-prompt']\n}\n// root/tpl/.edamrc\n{\n  extends: ['../.edamrc']\n  alias: {\n    edam: {\n      type: 'git',\n      url: 'imcuttle/edam',\n      config: {\n        output: \"./here\"\n      }\n      // The config has higher priority when source equals `edam`\n      // Support fields: cacheDir / output / plugins / storePrompts / pull\n      // version >= 2.2\n    }\n  }\n}\n// root/tpl/.edamrc \n{\n  alias: {\n    edam: {\n      type: 'git',\n      url: 'imcuttle/edam',\n      config: {\n        output: \"./here\"\n      }\n    },\n    react: 'facebook/react'\n  },\n  plugins: ['edam-plugin-dulcet-prompt']\n}</code></pre><h2 id=three-pull-ways><a href=#three-pull-ways aria-hidden=true><span class=\"icon icon-link\"></span></a>Three pull ways</h2><p>Supports <code>npm/git/file</code></p><h3 id=npm><a href=#npm aria-hidden=true><span class=\"icon icon-link\"></span></a><code>npm</code></h3><p>Pulls template assets from <code>npm</code> like <code>npm:edam@1.1.1</code> or shape of the follow in file.</p><pre><code class=\"hljs language-text\"data-query={} data-lang=text>{\n  source: {\n    type: 'npm',\n    url: 'edam',\n    version: 'latest'\n  }\n}</code></pre><h3 id=git><a href=#git aria-hidden=true><span class=\"icon icon-link\"></span></a>git</h3><p><code>github:imcuttle/cuttle?checkout=master</code></p><pre><code class=\"hljs language-text\"data-query={} data-lang=text>{\n  source: {\n    type: 'git',\n    url: 'https://github.com/imcuttle/edam.git',\n    // branch / commit SHA / tag\n    checkout: 'master'\n  }\n}</code></pre><h3 id=file><a href=#file aria-hidden=true><span class=\"icon icon-link\"></span></a>file</h3><p>It's easy to understand.</p><h2 id=prompts-hold><a href=#prompts-hold aria-hidden=true><span class=\"icon icon-link\"></span></a>Prompts-hold</h2><p>Edam could save the latest user-input when <code>storePrompts</code> is on. and you can avoid the frequent input passing <code>yes</code> flag.</p><h2 id=loader><a href=#loader aria-hidden=true><span class=\"icon icon-link\"></span></a>Loader</h2><p>Please checks out <a href=\"/advanced/write-template\">here</a>.</p><h2 id=cli-auto-completer><a href=#cli-auto-completer aria-hidden=true><span class=\"icon icon-link\"></span></a>CLI auto-completer</h2><p><a href=https://github.com/imcuttle/edam/blob/master/packages/edam-completer/Readme.md>edam-completer</a></p>",extra:{"_image-loader_":[n(244)]}}}});
//# sourceMappingURL=features.js.map